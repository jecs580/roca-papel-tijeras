{"version":3,"sources":["score.js","header.js","wrapper.js","token.js","button.js","table.js","rules.js","App.js","serviceWorker.js","index.js"],"names":["ScoreStyled","styled","div","Score","score","useContext","ScoreContext","HeaderStyled","Header","WrapperStyled","Wrapper","children","shadow","keyframes","box","TokenStyled","color","name","base","border","isShadowAnimated","colors","paper","rock","scissors","default","Token","onClick","className","src","alt","ButtonStyled","WhiteButton","disable","Button","props","TableStyled","letter","playing","elements","Table","setScore","useState","setLetter","results","setResults","housePick","setHousePick","setPlaying","pick","setPick","lanchHousePick","Promise","resolve","interval","setInterval","min","max","Math","floor","random","setTimeout","clearInterval","a","house","play","RulesStyled","visible","Rules","setVisible","handleToggleClick","createContext","AppStyled","main","App","Provider","value","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.afd91a3b.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ScoreContext } from \"./App\";\r\nconst ScoreStyled = styled.div`\r\n  background: white;\r\n  text-align: center;\r\n  padding: 10px 0;\r\n  border-radius: 0.5em;\r\n  width: 80px;\r\n  small {\r\n    color: #2a45c2;\r\n    text-transform: uppercase;\r\n    font-size: 10px;\r\n  }\r\n  p {\r\n    font-size: 40px;\r\n    margin: 0;\r\n    color: #565468;\r\n    font-weight: 700;\r\n    position: relative;\r\n    line-height: 0.9;\r\n  }\r\n  @media screen and (min-width: 768px) {\r\n    padding: 22px 35px;\r\n    margin-right: 8px;\r\n    small {\r\n      font-size: 16px;\r\n      letter-spacing: 3px;\r\n    }\r\n    p {\r\n      font-size: 60px;\r\n    }\r\n  }\r\n`;\r\n\r\nfunction Score() {\r\n  const { score } = useContext(ScoreContext);\r\n  return (\r\n    <ScoreStyled>\r\n      <small>Score</small>\r\n      <p>{score}</p>\r\n    </ScoreStyled>\r\n  );\r\n}\r\n\r\nexport default Score;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Score from \"./score\";\r\nconst HeaderStyled = styled.div`\r\n  color: white;\r\n  padding: 12px 12px 12px 23px;\r\n  border: 3px solid rgba(255, 255, 255, 0.29);\r\n  border-radius: 0.5em;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  h1 {\r\n    margin: 0;\r\n    font-size: 21px;\r\n    line-height: 16px;\r\n    font-weight: 700;\r\n    text-transform: uppercase;\r\n  }\r\n  @media screen and (min-width: 1024px) {\r\n    padding: 15px;\r\n    border-radius: 1.2em;\r\n    h1 {\r\n      padding: 15px;\r\n      font-size: 40px;\r\n      line-height: 0.78;\r\n    }\r\n  }\r\n`;\r\n\r\nfunction Header() {\r\n  return (\r\n    <HeaderStyled>\r\n      <h1>\r\n        Rock\r\n        <br /> paper\r\n        <br /> scissors\r\n      </h1>\r\n      <Score />\r\n    </HeaderStyled>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nconst WrapperStyled = styled.div`\r\n  max-width: 700px;\r\n  margin: auto;\r\n`;\r\nfunction Wrapper({ children }) {\r\n  return <WrapperStyled>{children}</WrapperStyled>;\r\n}\r\nexport default Wrapper;\r\n","import React from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\n\r\nconst shadow = keyframes`\r\n  to{\r\n    box-shadow: 0 0 0 40px rgba(255, 255,255, 0.05),  0 0 0 80px rgba(255, 255,255, 0.03),  0 0 0 120px rgba(255, 255,255, 0.025);\r\n    /* transform: rotateY(360deg) scale(1.1); */\r\n  }\r\n`;\r\nconst box = keyframes`\r\nto{\r\n  transform: rotateY(360deg);\r\n  }\r\n`;\r\n\r\nconst TokenStyled = styled.div`\r\n  width: 130px;\r\n  height: 125px;\r\n  border: 15px solid\r\n    ${({ color, name }) => (name === \"default\" ? \"transparent\" : color.base)};\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  /* padding: ${({ name }) => (name === \"default\" ? \"8px\" : \"0\")}; */\r\n  border-radius: 50%;\r\n  box-shadow: 0 10px 0 -4px ${({ color }) => color.border};\r\n  cursor: pointer;\r\n  position: relative;\r\n  z-index: 2;\r\n  ${({ isShadowAnimated }) =>\r\n    isShadowAnimated &&\r\n    \"box-shadow: 0 0 0 0px rgba(255, 255,255, 0.05),  0 0 0 0px rgba(255, 255,255, 0.03),  0 0 0 0px rgba(255, 255,255, 0.025);\"}\r\n  animation: ${({ isShadowAnimated }) =>\r\n    isShadowAnimated\r\n      ? shadow\r\n      : \"\"} 1s forwards;  /* Formards conserva la ultima animacion.*/\r\n  /* box-shadow:0 10px 0 -4px ${({ color }) =>\r\n    color.border}, 0 0 0 40px rgba(255, 255,255, 0.05),  0 0 0 80px rgba(255, 255,255, 0.03),  0 0 0 120px rgba(255, 255,255, 0.025); */\r\n  &:active {\r\n    transform: scale(0.9);\r\n  }\r\n  .box {\r\n    /* box-shadow: 0 -4px #babfd4; */\r\n    background: ${({ name }) => (name === \"default\" ? \"#122343\" : \"white\")};\r\n    box-shadow: 0 -4px ${({ name }) =>\r\n      name === \"default\" ? \"transparent\" : \"#babfd4\"};\r\n    flex: 1;\r\n    border-radius: 50%;\r\n    display: flex;\r\n    align-self: stretch;\r\n    justify-content: center;\r\n    align-items: center;\r\n    img{\r\n      animation:1s ${({ isShadowAnimated }) => (isShadowAnimated ? box : \"\")};\r\n    }\r\n  }\r\n  @media screen and (min-width: 768px){\r\n    width: 200px;\r\n    height: 195px;\r\n    border: 25px solid\r\n    ${({ color, name }) => (name === \"default\" ? \"transparent\" : color.base)};\r\n    .box{\r\n      img{\r\n        width:46%;\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst colors = {\r\n  paper: {\r\n    base: \"#516ef4\",\r\n    border: \"#2543c3\",\r\n  },\r\n  rock: {\r\n    base: \"#de3a5a\",\r\n    border: \"#980e31\",\r\n  },\r\n  scissors: {\r\n    base: \"#eca81e\",\r\n    border: \"#c76c14\",\r\n  },\r\n  default: {\r\n    base: \"#1C2E4E\",\r\n    border: \"transparent\",\r\n  },\r\n};\r\nfunction Token({ name = \"default\", onClick, isShadowAnimated = false }) {\r\n  function handleClick() {\r\n    if (onClick) {\r\n      onClick(name);\r\n    }\r\n  }\r\n  const color = colors[name];\r\n  return (\r\n    <TokenStyled\r\n      color={color}\r\n      onClick={handleClick}\r\n      name={name}\r\n      isShadowAnimated={isShadowAnimated}\r\n    >\r\n      <div className=\"box\">\r\n        <img src={`./images/icon-${name}.svg`} alt=\"\" />\r\n      </div>\r\n    </TokenStyled>\r\n  );\r\n}\r\n\r\nexport default Token;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ButtonStyled = styled.div`\r\n  display: inline-flex;\r\n  border: 1px solid white;\r\n  /* pointer-events: all; */\r\n  border-radius: 0.5em;\r\n  min-width: 128px;\r\n  padding: 0.5em;\r\n  user-select: none;\r\n  box-sizing: border-box;\r\n  text-transform: uppercase;\r\n  justify-content: center;\r\n  font-size: 1.2em;\r\n  letter-spacing: 2.5px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background: white;\r\n    color: #565468;\r\n  }\r\n`;\r\nexport const WhiteButton = styled(ButtonStyled)`\r\n  /* Creacion un nuevo componente usando los estilos de otro y solo cambiando\r\n  atributos particulares. De este modo nos ahorramos de crear un archivo con el nuevo estilo */\r\n  background: white;\r\n  color: #565468;\r\n  min-width: 220px;\r\n\r\n  ${({ disable }) => (disable ? \"pointer-events:all\" : \"pointer-events:none\")}\r\n`;\r\nfunction Button({ disable = false, children, ...props }) {\r\n  return (\r\n    <ButtonStyled disable={disable} {...props}>\r\n      {children}\r\n    </ButtonStyled>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import React, { useState, useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Token from \"./token\";\r\nimport { WhiteButton } from \"./button\";\r\nimport { ScoreContext } from \"./App\";\r\nconst TableStyled = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 130px 130px;\r\n  justify-content: center;\r\n  justify-items: center;\r\n  grid-gap: 30px 50px; /* [Distancia vertical distancia horizontal]*/\r\n  position: relative;\r\n\r\n  /* background: url(\"./images/bg-triangle.svg\") no-repeat center; */\r\n  /* background-size: cover; */\r\n  /* background-size: 85%; */\r\n  /* background-position-y: 50px; */\r\n  margin: 2em 0;\r\n  & div:nth-of-type(3) {\r\n    grid-column: span 2; /*Especificamos que el tercer hijo ocupe dos espacios de la grilla*/\r\n  }\r\n  .in-game {\r\n    text-align: center;\r\n    text-transform: uppercase;\r\n    font-size: 0.8em;\r\n    font-weight: 600;\r\n    letter-spacing: 2px;\r\n    user-select: none;\r\n  }\r\n  .results {\r\n    text-align: center;\r\n    text-transform: uppercase;\r\n    h2 {\r\n      opacity: ${({ letter }) => letter};\r\n      font-size: 52px;\r\n      user-select: none;\r\n      margin-bottom: 10px;\r\n    }\r\n  }\r\n  .line {\r\n    display: ${({ playing }) => (!playing ? \"block\" : \"none\")};\r\n    height: 15px;\r\n    background: rgba(0, 0, 0, 0.3);\r\n    position: absolute;\r\n    width: 187px;\r\n    /* left: 60px;\r\n    right: 60px; */\r\n    top: 55px;\r\n\r\n    &:before {\r\n      content: \"\";\r\n      height: 15px;\r\n      background: rgba(0, 0, 0, 0.3);\r\n      position: absolute;\r\n      left: 0;\r\n      right: 0;\r\n      /* top: 55px; */\r\n      transform: rotate(60deg);\r\n      transform-origin: left top;\r\n    }\r\n    &:after {\r\n      content: \"\";\r\n      height: 15px;\r\n      background: rgba(0, 0, 0, 0.3);\r\n      position: absolute;\r\n      left: 0;\r\n      right: 0;\r\n      /* top: 55px; */\r\n      transform: rotate(296deg);\r\n      transform-origin: right top;\r\n    }\r\n  }\r\n  @media screen and (min-width: 768px) {\r\n    grid-template-columns: 200px 200px;\r\n    grid-template-rows: 200px 200px;\r\n    /* gap:30px, 140px; */\r\n    .line {\r\n      width: 300px;\r\n    }\r\n  }\r\n`;\r\nconst elements = [\"paper\", \"scissors\", \"rock\"];\r\nfunction Table() {\r\n  const { score, setScore } = useContext(ScoreContext);\r\n  const [letter, setLetter] = useState(0);\r\n  const [results, setResults] = useState(\"\"); // cambiar a vacio\r\n  const [housePick, setHousePick] = useState(\"default\"); // cambiar a default\r\n  const [playing, setPlaying] = useState(false); // cambiar a falso\r\n  const [pick, setPick] = useState(\"\"); // Cambiar a vacio\r\n  function getRandomInt(min, max) {\r\n    return Math.floor(Math.random() * (max - min)) + min;\r\n  }\r\n  function lanchHousePick() {\r\n    return new Promise((resolve) => {\r\n      let pick;\r\n      const interval = setInterval(() => {\r\n        pick = elements[getRandomInt(0, 3)];\r\n        setHousePick(pick);\r\n      }, 60);\r\n      setTimeout(() => {\r\n        clearInterval(interval);\r\n        resolve(pick);\r\n      }, 1000);\r\n    });\r\n  }\r\n  async function onClick(name) {\r\n    setPlaying(true);\r\n    setPick(name);\r\n    const house = await lanchHousePick();\r\n    // console.log(\"la casa eligio\", house);\r\n    const results = play(house, name);\r\n    // console.log(results);\r\n    setResults(results);\r\n    setLetter(1);\r\n    if (results === \"win\") {\r\n      setScore(score + 1);\r\n    }\r\n  }\r\n  function play(housePick, pick) {\r\n    if (housePick === pick) {\r\n      return \"draw\";\r\n    }\r\n    if (pick === \"paper\") {\r\n      if (housePick === \"scissors\") {\r\n        return \"lose\";\r\n      }\r\n      if (housePick === \"rock\") {\r\n        return \"win\";\r\n      }\r\n    }\r\n    if (pick === \"rock\") {\r\n      if (housePick === \"paper\") {\r\n        return \"lose\";\r\n      }\r\n      if (housePick === \"scissors\") {\r\n        return \"win\";\r\n      }\r\n    }\r\n    if (pick === \"scissors\") {\r\n      if (housePick === \"paper\") {\r\n        return \"win\";\r\n      }\r\n      if (housePick === \"rock\") {\r\n        return \"lose\";\r\n      }\r\n    }\r\n  }\r\n  function handlePlayAgainClick() {\r\n    setPlaying(false);\r\n    setLetter(0);\r\n    setResults(\"\");\r\n  }\r\n  return (\r\n    <TableStyled playing={playing} letter={letter}>\r\n      <span className=\"line\"></span>\r\n      {!playing ? (\r\n        <>\r\n          <Token name=\"paper\" onClick={onClick} />\r\n          <Token name=\"scissors\" onClick={onClick} />\r\n          <Token name=\"rock\" onClick={onClick} />\r\n        </>\r\n      ) : (\r\n        <>\r\n          <div className=\"in-game\">\r\n            <Token name={pick} isShadowAnimated={results === \"win\"} />\r\n            <p>You Picked</p>\r\n          </div>\r\n          <div className=\"in-game\">\r\n            <Token name={housePick} isShadowAnimated={results === \"lose\"} />\r\n            <p>The house Picked</p>\r\n          </div>\r\n          <div className=\"results\">\r\n            <h2>You {results}</h2>\r\n            <WhiteButton disable={results} onClick={handlePlayAgainClick}>\r\n              Play again\r\n            </WhiteButton>\r\n          </div>\r\n        </>\r\n      )}\r\n    </TableStyled>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"./button\";\r\n\r\nconst RulesStyled = styled.div`\r\n  text-align: center;\r\n  &:before {\r\n    content: \"\";\r\n    display: ${({ visible }) => (visible ? \"block\" : \"none\")};\r\n    top: 0;\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    z-index: 2;\r\n    background: rgba(0, 0, 0, 0.6);\r\n  }\r\n  .rules-overlay {\r\n    background: white;\r\n    position: fixed;\r\n    left: 0;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    z-index: 3;\r\n    display: flex;\r\n    /* min-height: 100vh; */\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    h2 {\r\n      color: #3b4262;\r\n      margin-bottom: 2em;\r\n      text-transform: uppercase;\r\n      font-weight: 700;\r\n    }\r\n    .close-button {\r\n      margin-top: 2em;\r\n    }\r\n  }\r\n  @media screen and (min-width: 768px) {\r\n    /* text-align: right; */\r\n    .button {\r\n      position: fixed;\r\n      right: 2em;\r\n      bottom: 2em;\r\n    }\r\n    .rules-overlay {\r\n      padding: 2em;\r\n      padding-top: 0em;\r\n      width: 400px;\r\n      margin: auto;\r\n      box-sizing: border-box;\r\n      top: 0;\r\n      border-radius: 10px;\r\n      bottom: initial;\r\n      transform: translateY(50%);\r\n    }\r\n    h2 {\r\n      align-self: flex-start;\r\n      font-size: 32px;\r\n      margin-bottom: 1.2em !important;\r\n    }\r\n    .close-button {\r\n      position: absolute;\r\n      right: 2em;\r\n      cursor: pointer;\r\n      top: 0.4em;\r\n    }\r\n  }\r\n`;\r\n\r\nfunction Rules() {\r\n  const [visible, setVisible] = useState(false); //Sirve como opereador ternario\r\n  function handleToggleClick() {\r\n    setVisible(!visible);\r\n  }\r\n  return (\r\n    <RulesStyled visible={visible}>\r\n      {visible && (\r\n        <div className=\"rules-overlay\">\r\n          <h2>Rules</h2>\r\n          <img src=\"./images/image-rules.svg\" alt=\"Game rules\" />\r\n          <img\r\n            className=\"close-button\"\r\n            onClick={handleToggleClick}\r\n            src=\"./images/icon-close.svg\"\r\n            alt=\"Close the game rules\"\r\n          />\r\n        </div>\r\n      )}\r\n      <Button className=\"button\" onClick={handleToggleClick}>\r\n        Rules\r\n      </Button>\r\n    </RulesStyled>\r\n  );\r\n}\r\n\r\nexport default Rules;\r\n","import React, { createContext, useState } from \"react\";\r\n// import logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport Header from \"./header\";\r\nimport styled from \"styled-components\";\r\nimport Wrapper from \"./wrapper\";\r\nimport Table from \"./table\";\r\nimport Rules from \"./rules\";\r\n\r\nexport const ScoreContext = createContext();\r\nconst AppStyled = styled.main`\r\n  font-family: \"Barlow Semi Condensed\", sans-serif;\r\n  background-image: radial-gradient(\r\n    circle at top,\r\n    hsl(214, 47%, 23%) 40%,\r\n    hsl(237, 49%, 15%) 100%\r\n  );\r\n  color: white;\r\n  font-weight: 700;\r\n  .app-content {\r\n    padding: 2em;\r\n    box-sizing: border-box;\r\n    min-height: 100vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n  }\r\n  /* span {\r\n    text-transform: uppercase;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    border: 1px solid white;\r\n    width: 30%;\r\n  } */\r\n`;\r\n\r\nfunction App() {\r\n  const [score, setScore] = useState(0);\r\n  return (\r\n    <ScoreContext.Provider\r\n      value={{\r\n        score,\r\n        setScore,\r\n      }}\r\n    >\r\n      <AppStyled>\r\n        <Wrapper>\r\n          <div className=\"app-content\">\r\n            <Header />\r\n            <Table />\r\n            <Rules />\r\n          </div>\r\n        </Wrapper>\r\n      </AppStyled>\r\n    </ScoreContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}