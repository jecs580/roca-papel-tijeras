{"version":3,"sources":["score.js","header.js","wrapper.js","token.js","table.js","button.js","rules.js","App.js","serviceWorker.js","index.js"],"names":["ScoreStyled","styled","div","Score","HeaderStyled","Header","WrapperStyled","Wrapper","children","TokenStyled","color","name","base","border","colors","paper","rock","scissors","default","Token","onClick","className","src","alt","TableStyled","playing","Table","useState","setPlaying","pick","setPick","console","log","ButtonStyled","Button","props","RulesStyled","Rules","visible","setVisible","handleToggleClick","AppStyled","main","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.cd58f894.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nconst ScoreStyled = styled.div`\r\n  background: white;\r\n  text-align: center;\r\n  padding: 10px 0;\r\n  border-radius: 0.5em;\r\n  width: 80px;\r\n  small {\r\n    color: #2a45c2;\r\n    text-transform: uppercase;\r\n    font-size: 10px;\r\n  }\r\n  p {\r\n    font-size: 40px;\r\n    margin: 0;\r\n    color: #565468;\r\n    font-weight: 700;\r\n    position: relative;\r\n    line-height: 0.9;\r\n  }\r\n`;\r\n\r\nfunction Score() {\r\n  return (\r\n    <ScoreStyled>\r\n      <small>Score</small>\r\n      <p>12</p>\r\n    </ScoreStyled>\r\n  );\r\n}\r\n\r\nexport default Score;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Score from \"./score\";\r\nconst HeaderStyled = styled.div`\r\n  color: white;\r\n  padding: 12px 12px 12px 23px;\r\n  border: 3px solid rgba(255, 255, 255, 0.29);\r\n  border-radius: 0.5em;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  h1 {\r\n    font-size: 21px;\r\n    line-height: 16px;\r\n    font-weight: 700;\r\n    text-transform: uppercase;\r\n  }\r\n`;\r\n\r\nfunction Header() {\r\n  return (\r\n    <HeaderStyled>\r\n      <h1>\r\n        Rock\r\n        <br /> paper\r\n        <br /> scissors\r\n      </h1>\r\n      <Score />\r\n    </HeaderStyled>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nconst WrapperStyled = styled.div`\r\n  max-width: 1024px;\r\n  margin: auto;\r\n`;\r\nfunction Wrapper({ children }) {\r\n  return <WrapperStyled>{children}</WrapperStyled>;\r\n}\r\nexport default Wrapper;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nconst TokenStyled = styled.div`\r\n  width: 130px;\r\n  height: 125px;\r\n  border: 15px solid\r\n    ${({ color, name }) => (name === \"default\" ? \"transparent\" : color.base)};\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  /* padding: ${({ name }) => (name === \"default\" ? \"8px\" : \"0\")}; */\r\n  border-radius: 50%;\r\n  box-shadow: 0 10px 0 -4px ${({ color }) => color.border};\r\n  cursor: pointer;\r\n  position: relative;\r\n  z-index: 2;\r\n  &:active {\r\n    transform: scale(0.9);\r\n  }\r\n  .box {\r\n    /* box-shadow: 0 -4px #babfd4; */\r\n    background: ${({ name }) => (name === \"default\" ? \"#122343\" : \"white\")};\r\n    box-shadow: 0 -4px ${({ name }) =>\r\n      name === \"default\" ? \"transparent\" : \"#babfd4\"};\r\n    flex: 1;\r\n    border-radius: 50%;\r\n    display: flex;\r\n    align-self: stretch;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n`;\r\nconst colors = {\r\n  paper: {\r\n    base: \"#516ef4\",\r\n    border: \"#2543c3\",\r\n  },\r\n  rock: {\r\n    base: \"#de3a5a\",\r\n    border: \"#980e31\",\r\n  },\r\n  scissors: {\r\n    base: \"#eca81e\",\r\n    border: \"#c76c14\",\r\n  },\r\n  default: {\r\n    base: \"#1C2E4E\",\r\n    border: \"transparent\",\r\n  },\r\n};\r\nfunction Token({ name = \"default\", onClick }) {\r\n  function handleClick() {\r\n    onClick(name);\r\n  }\r\n  const color = colors[name];\r\n  return (\r\n    <TokenStyled color={color} onClick={handleClick} name={name}>\r\n      <div className=\"box\">\r\n        <img src={`./images/icon-${name}.svg`} alt=\"\" />\r\n      </div>\r\n    </TokenStyled>\r\n  );\r\n}\r\n\r\nexport default Token;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Token from \"./token\";\r\nconst TableStyled = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 130px 130px;\r\n  justify-content: center;\r\n  justify-items: center;\r\n  grid-gap: 30px 50px; /* [Distancia vertical distancia horizontal]*/\r\n  position: relative;\r\n\r\n  /* background: url(\"./images/bg-triangle.svg\") no-repeat center; */\r\n  /* background-size: cover; */\r\n  /* background-size: 85%; */\r\n  /* background-position-y: 50px; */\r\n  margin: 2em 0;\r\n  & div:nth-of-type(3) {\r\n    grid-column: span 2; /*Especificamos que el tercer hijo ocupe dos espacios de la grilla*/\r\n  }\r\n  .in-game {\r\n    text-align: center;\r\n    text-transform: uppercase;\r\n    font-size: 0.8em;\r\n    font-weight: 600;\r\n    letter-spacing: 2px;\r\n  }\r\n  .line {\r\n    display: ${({ playing }) => (!playing ? \"block\" : \"none\")};\r\n    height: 15px;\r\n    background: rgba(0, 0, 0, 0.3);\r\n    position: absolute;\r\n    left: 60px;\r\n    right: 60px;\r\n    top: 55px;\r\n\r\n    &:before {\r\n      content: \"\";\r\n      height: 15px;\r\n      background: rgba(0, 0, 0, 0.3);\r\n      position: absolute;\r\n      left: 0;\r\n      right: 0;\r\n      /* top: 55px; */\r\n      transform: rotate(60deg);\r\n      transform-origin: left top;\r\n    }\r\n    &:after {\r\n      content: \"\";\r\n      height: 15px;\r\n      background: rgba(0, 0, 0, 0.3);\r\n      position: absolute;\r\n      left: 0;\r\n      right: 0;\r\n      /* top: 55px; */\r\n      transform: rotate(296deg);\r\n      transform-origin: right top;\r\n    }\r\n  }\r\n`;\r\n\r\nfunction Table() {\r\n  const [playing, setPlaying] = useState(true); // cambiar a falso\r\n  const [pick, setPick] = useState(\"paper\"); // Cambiar a vacio\r\n  function onClick(name) {\r\n    console.log(name);\r\n    setPlaying(true);\r\n    setPick(name);\r\n  }\r\n  return (\r\n    <TableStyled playing={playing}>\r\n      <span className=\"line\"></span>\r\n      {!playing ? (\r\n        <>\r\n          <Token name=\"paper\" onClick={onClick} />\r\n          <Token name=\"scissors\" onClick={onClick} />\r\n          <Token name=\"rock\" onClick={onClick} />\r\n        </>\r\n      ) : (\r\n        <>\r\n          <div className=\"in-game\">\r\n            <Token name={pick} />\r\n            <p>You Picked</p>\r\n          </div>\r\n          <div className=\"in-game\">\r\n            <Token />\r\n            <p>The house Picked</p>\r\n          </div>\r\n        </>\r\n      )}\r\n    </TableStyled>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ButtonStyled = styled.div`\r\n  display: inline-flex;\r\n  border: 1px solid white;\r\n  border-radius: 0.5em;\r\n  min-width: 128px;\r\n  padding: 0.5em;\r\n  box-sizing: border-box;\r\n  text-transform: uppercase;\r\n  justify-content: center;\r\n  font-size: 1.2em;\r\n  letter-spacing: 2.5px;\r\n  cursor: pointer;\r\n`;\r\n\r\nfunction Button({ ...props }) {\r\n  return <ButtonStyled {...props}>Rules</ButtonStyled>;\r\n}\r\n\r\nexport default Button;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"./button\";\r\n\r\nconst RulesStyled = styled.div`\r\n  text-align: center;\r\n  .rules-overlay {\r\n    background: white;\r\n    position: fixed;\r\n    left: 0;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    z-index: 2;\r\n    display: flex;\r\n    min-height: 100vh;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    h2 {\r\n      color: #3b4262;\r\n      margin-bottom: 2em;\r\n      text-transform: uppercase;\r\n      font-weight: 700;\r\n    }\r\n    .close-button {\r\n      margin-top: 2em;\r\n    }\r\n  }\r\n`;\r\n\r\nfunction Rules() {\r\n  const [visible, setVisible] = useState(false); //Sirve como opereador ternario\r\n  function handleToggleClick() {\r\n    setVisible(!visible);\r\n  }\r\n  return (\r\n    <RulesStyled>\r\n      {visible && (\r\n        <div className=\"rules-overlay\">\r\n          <h2>Rules</h2>\r\n          <img src=\"./images/image-rules.svg\" alt=\"Game rules\" />\r\n          <img\r\n            className=\"close-button\"\r\n            onClick={handleToggleClick}\r\n            src=\"./images/icon-close.svg\"\r\n            alt=\"Close the game rules\"\r\n          />\r\n        </div>\r\n      )}\r\n      <Button onClick={handleToggleClick} />\r\n    </RulesStyled>\r\n  );\r\n}\r\n\r\nexport default Rules;\r\n","import React from \"react\";\n// import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Header from \"./header\";\nimport styled from \"styled-components\";\nimport Wrapper from \"./wrapper\";\nimport Table from \"./table\";\nimport Rules from \"./rules\";\nconst AppStyled = styled.main`\n  font-family: \"Barlow Semi Condensed\", sans-serif;\n  background-image: radial-gradient(\n    circle at top,\n    hsl(214, 47%, 23%) 40%,\n    hsl(237, 49%, 15%) 100%\n  );\n  color: white;\n  font-weight: 700;\n  .app-content {\n    padding: 2em;\n    box-sizing: border-box;\n    min-height: 100vh;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n  }\n  /* span {\n    text-transform: uppercase;\n    font-weight: 600;\n    text-align: center;\n    border: 1px solid white;\n    width: 30%;\n  } */\n`;\n\nfunction App() {\n  return (\n    <AppStyled>\n      <Wrapper>\n        <div className=\"app-content\">\n          <Header />\n          <Table />\n          <Rules />\n        </div>\n      </Wrapper>\n    </AppStyled>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}